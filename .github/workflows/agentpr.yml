name: AgentPR - PR Analysis

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  run-agents:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: agentpr
          POSTGRES_USER: agentpr_user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd="pg_isready -U agentpr_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PGHOST: localhost
      PGUSER: agentpr_user
      PGPASSWORD: password
      PGDATABASE: agentpr
      PGPORT: 5432

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🛡️ Install Semgrep
        run: pip install semgrep
      
      - name: 🛠️ Create coverage_history table
        run: |
          until pg_isready -h localhost -U $PGUSER; do
          echo "Waiting for PostgreSQL to be ready..."; sleep 2;
          done
          psql -h localhost -U $PGUSER -d $PGDATABASE -c "
          CREATE TABLE IF NOT EXISTS coverage_history (
            id SERIAL PRIMARY KEY,
            pr_number INT NOT NULL,
            branch TEXT NOT NULL,
            lines_covered INT,
            lines_total INT,
            statements_covered INT,
            statements_total INT,
            functions_covered INT,
            functions_total INT,
            branches_covered INT,
            branches_total INT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            UNIQUE (pr_number, branch)
          );
          "



      - name: 🔐 Run All Agents
        run: semgrep --config p/owasp-top-ten --json > semgrep-output.json && npx ts-node scripts/testRunAllAgents.ts



